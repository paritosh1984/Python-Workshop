\frametitle{Preorder and Inorder Traversal}
The algorithm for the postorder traversal is nearly identical to preorder except that we move the call to print to the end of the function.
\begin{lstlisting}[language=Python]
def preorder(tree):
    if tree:
        print(tree.get_root_val())
        preorder(tree.get_left_child())
        preorder(tree.get_right_child())
\end{lstlisting}

In the inorder traversal we visit the left subtree, followed by the root, and finally the right subtree.
\begin{lstlisting}[language=Python]
def inorder(tree):
    if tree != None:
        inorder(tree.get_left_child())
        print(tree.get_root_val())
        inorder(tree.get_right_child())
\end{lstlisting}
